/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        if(root==null)
            return new ArrayList<List<Integer>>();
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        ArrayList<List<Integer>> res = new ArrayList<List<Integer>>();
        queue.add(root);
        int level = 0;
        while(!queue.isEmpty())
        {
            int queueSize = queue.size();
            ArrayList<Integer> element = null;
            for(int i = 0 ; i <queueSize;i++ )
            {
                TreeNode current = queue.poll();
                 if(element == null)
                 {
                     element = new ArrayList<Integer>();
                     element.add(current.val);                         
                 }
                else
                    element.add(current.val);
                if(current.left!=null)
                    queue.add(current.left);
                if(current.right!=null)
                    queue.add(current.right);
                    
            }
            res.add(element);
            
        }
        return res;
    }
}
